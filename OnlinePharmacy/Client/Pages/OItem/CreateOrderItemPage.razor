@attribute [Authorize]
@page "/OrderItem/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime JSRuntime

<h1 class="mt-3" id="CreateOrderItemheader"> Create Order Item</h1>


<FormComponent ButtonText="Create Order Item" orderitem="orderitem" OnValidSubmit="@CreateOrderItems"/>
<a href="/Delivery/create/" class="btn btn-primary">
    <span class="oi oi-arrow-right"></span>
    Create Delivery
</a>

@code {

    OrderItem orderitem = new OrderItem();

    private IList<Order>? Orders;
    private IList<Product>? Products;


    protected async override Task OnInitializedAsync()
    {
        Orders = await _client.GetFromJsonAsync<List<Order>>($"{Endpoints.OrdersEndpoint}");
        Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");

    }

    private async Task CreateOrderItems()
    {

        await _client.PostAsJsonAsync(Endpoints.OrderItemsEndpoint, orderitem);
        await JSRuntime.InvokeVoidAsync("alert", "Order item was Created!");
        orderitem = new OrderItem();
       
    }

}

