@inject HttpClient _client

<EditForm Model="@orderitem" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="d-flex flex-column mt-4" id="flexcolumnorderitem">
            <div class="card bg-light mb-3 OrderItemCard">
                <div class="card-header">Order Item</div>
                <div class="card-body">
                    <div class="container-xl px-4 mt-4" id="orderitemdetails">
                        <div class="row gx-3 mb-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Order ID: </label>
                                    <div>
                                        <h5>
                                            @orderitem.OrderID
                                        </h5>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="table-responsive ordershopping-cart">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th class="text-center orderitemtableheader">Order Product</th>
                                            <th class="text-center orderitemtableheader">Quantity</th>
                                            <th class="text-center orderitemtableheader">Price</th>
                                            <th class="text-center orderitemtableheader">Subtotal</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>
                                                <div class="d-flex justify-content-center align-items-center">
                                                    <div class="flex-row">
                                                        <div class="flex-container d-flex justify-content-center align-items-center">
                                                            <a class="orderproductproduct-thumb">
                                                                <img src="@GetProductImage(orderitem.ProductID)" class="OrderProductimage">
                                                            </a>
                                                        </div>
                                                        <div class="orderproduct-info mt-4">
                                                            <h4 class="orderitem-title text-center">
                                                                <div class="form-group">
                                                                    <label>Product Name: </label>
                                                                    <div class="bordercolor">
                                                                        <InputSelect @bind-Value="orderitem.ProductID" class="form-control border-0 text-center" oninput="@OnProductSelected">
                                                                            <option value="">-- Please Select the Product Item --</option>
                                                                            @if (Products != null)
                                                                            {
                                                                                foreach (var product in Products)
                                                                                {
                                                                                    if (product.PrescriptionStatus == false && product.StockAvailable == true)
                                                                                    {
                                                                                        <option value="@product.ProductID">@product.ProductName</option>
                                                                                    }
                                                                                }
                                                                            }
                                                                        </InputSelect>
                                                                        <ValidationMessage For="@(() => orderitem.ProductID)" />
                                                                    </div>
                                                                </div>
                                                            </h4>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-center">
                                                <div class="count-input">
                                                    <div>
                                                        <h4>
                                                            <input type="number" @bind="@orderitem.OrderItemQty" class="form-control-sm-5 text-center" @oninput="@OnQuantityChanged" />
                                                            <ValidationMessage For="@(() => orderitem.OrderItemQty)" />
                                                        </h4>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-center text-lg text-medium">
                                                <div>
                                                    <h4>
                                                        @GetProductPrice(orderitem.ProductID)
                                                    </h4>
                                                </div>
                                            </td>
                                            <td class="text-center text-lg text-medium">
                                                <div>
                                                    @{
                                                        orderitem.OrderItemSubTotal = orderitem.OrderItemQty * GetProductPrice(orderitem.ProductID);
                                                    }

                                                    <h4>
                                                        @orderitem.OrderItemSubTotal
                                                    </h4>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>

    <div class="d-flex flex-column-md-6 mt-2 justify-content-center">
        @if (!Disabled)
        {
            <button type="submit" class="btn btn-success me-2">
                @ButtonText
            </button>
        }
    </div>
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public OrderItem? orderitem { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Product>? Products;

    protected async override Task OnInitializedAsync()
    {
        Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
    }

    private string GetProductImage(int productId)
    {
        var selectedProduct = Products?.FirstOrDefault(p => p.ProductID == productId);
        return selectedProduct?.ProductImage ?? "https://store-in.puma.com/VendorpageTheme/Enterprise/EThemeForPuma/images/product-not-found.jpg";
    }

    private void OnProductSelected(ChangeEventArgs args)
    {
        StateHasChanged();
    }

    private decimal GetProductPrice(int productId)
    {
        var selectedProduct = Products?.FirstOrDefault(p => p.ProductID == productId);
        return selectedProduct?.ProductPrice ?? 0.0m;
    }

    private void OnQuantityChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int quantity))
        {
            orderitem.OrderItemSubTotal = quantity * GetProductPrice(orderitem.ProductID);
            StateHasChanged();
        }
        else
        {
            orderitem.OrderItemSubTotal = 0;
            StateHasChanged();
        }
    }
}
