@attribute [Authorize]
@inject HttpClient _client
@inject IJSRuntime js
@page "/Product"
<PageTitle>Product</PageTitle>


<nav class="navbar navbar-expand-lg bg-white  ">
    <div class="container" aria-label="breadcrumb" id="breadcrumbproduct">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">Product</li>
        </ol>
    </div>
</nav>


<div class="container">

    <div class="d-flex flex-column" id="dflexProduct">
        <h1 class="mt-2" id="Productheader">Product</h1>
        <a href="/Product/create" class="btn btn-secondary createproductbutton">
            <span class="oi oi-plus"></span>
            Create New Product
        </a>
    </div>


    <div class="row">
        <div class="col-md-5 col-lg-4 order-md-first">
            <div class="col">
                <div class="card h-100">
                    <img src="..." class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Card title</h5>
                        <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-7 col-lg-8 ">
            <div class="row row-cols-1 row-cols-md-3 g-4 mt-2">
            @if (Products == null)
            {
                <div class="alert alert-info">Loading Orders</div>
            }
            else
            {
                    @foreach (var product in Products)
                    {
                        <div class="col aproduct">

                            <a href="/Product/view/@product.ProductID" class="card h-100 productcard" style="text-decoration: none;">
                                <button class="btn btn-danger" @onclick="@(()=>Delete(product.ProductID))">
                                    <i class="bi bi-x-lg"></i>
                                </button>
                                <img src="https://alcare.sg/wp-content/uploads/2019/08/PANC-1.jpg" class="catproductimage">
                                <div class="card-body productcardbody">
                                    <h3 class="productname">@product.ProductName</h3>
                                    <h5 class="productprice">@product.ProductPrice</h5>
                                    <a href="/Product/edit/@product.ProductID" class="btn btn-warning">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                </div>
                            </a>
                        </div>
                    }
            }
            </div>
        </div>
    </div>
</div>


@code {
    private List<Product>? Products;
    <!--When the page begins to load-->
    protected async override Task OnInitializedAsync()
    {
        Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
    }
    async Task Delete(int productId)
    {
        if (Products != null)
        {
            var product = Products.First(q => q.ProductID ==productId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to Delete {product.ProductID}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.ProductsEndpoint}/{productId}");
                await OnInitializedAsync();
            }
        }
    }

}
