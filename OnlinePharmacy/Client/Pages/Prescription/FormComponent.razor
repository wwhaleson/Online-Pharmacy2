@inject HttpClient _client

<EditForm Model="@prescription" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Issue Date: </label>
            <div>
                <InputDate @bind-Value="@prescription.IssueDate" class="form-control" />
                <ValidationMessage For="@(() => prescription.IssueDate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Expiry Date: </label>
            <div>
                <InputDate @bind-Value="@prescription.ExpiryDate" class="form-control" />
                <ValidationMessage For="@(() => prescription.ExpiryDate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Online Consultation: </label>
            <div>
                <InputSelect @bind-Value="prescription.OnlineConsultationID" class="form-control">
                    <option value="">-- Select Online Consultation ID --</option>
                    @if (OnlineConsultations != null)
                    {
                        foreach (var onlineconsultation in OnlineConsultations)
                        {
                            <option value="@onlineconsultation.OnlineConsultationID">@onlineconsultation.OnlineConsultationID</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => prescription.OnlineConsultationID)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="Prescription" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Prescription? prescription { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private IList<OnlineConsultation>? OnlineConsultations;

    protected async override Task OnInitializedAsync()
    {
        OnlineConsultations = await _client.GetFromJsonAsync<List<OnlineConsultation>>($"{Endpoints.OnlineConsultationsEndpoint}");
    }

}