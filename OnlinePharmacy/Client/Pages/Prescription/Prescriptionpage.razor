@attribute [Authorize]
@inject HttpClient _client
@inject IJSRuntime js
@page "/Prescription"
@inject HttpInterceptorService _interceptor
@implements IDisposable
<PageTitle>Prescription</PageTitle>

<div class="container">
    <div class="d-flex flex-column" id="dflexPrescription">
        <h1 class="mt-5" id="Prescriptionheader">Prescription</h1>
        <a href="/Prescription/create" class="btn btn-secondary createprescriptionbutton">
            <span class="oi oi-plus"></span>
            Create New Prescription
        </a>
    </div>
    
    @if (Prescriptions == null)
    {
        <div class="alert alert-info">Loading Prescriptions</div>
    }
    else{
    <div class="table-responsive mt-3">
        <table class="table ">
            <thead class="table-light">
                <tr id="Prescriptiontablecolumnname">
                    <th scope="col" class="dcol">#PrescriptionID</th>
                    <th scope="col" class="dcol">#OnlineConsultationID</th>
                    <th scope="col" class="dcol">Issue Date</th>
                    <th scope="col" class="dcol">Expiry Date</th>            
                    <th scope="col" class="dcol">Actions</th>
                </tr>
            </thead>


            <tbody>
                @foreach (var prescription in Prescriptions)
                {
                    <tr>
                        <td class="dr">@prescription.PrescriptionID</td>
                        <td class="dr">@prescription.OnlineConsultationID</td>
                        <td class="dr">@prescription.IssueDate.Value.ToString("dddd, dd MMMM yyyy")</td>
                        <td class="dr">@prescription.ExpiryDate.Value.ToString("dddd, dd MMMM yyyy")</td>
                        <td class="dr">
                            <a href="/Prescription/view/@prescription.PrescriptionID" class="btn btn-primary">
                                    <i class="bi bi-file-earmark"></i>
                            </a>
                            <a href="/Prescription/edit/@prescription.PrescriptionID" class="btn btn-warning">
                                    <i class="bi bi-pencil-square"></i>
                            </a>
                            <button class="btn btn-danger" @onclick="@(()=>Delete(prescription.PrescriptionID))">
                                    <i class="bi bi-x-lg"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>}

</div>

@code {
    private List<Prescription>? Prescriptions;
    <!--When the page begins to load-->
    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Prescriptions = await _client.GetFromJsonAsync<List<Prescription>>($"{Endpoints.PrescriptionsEndpoint}");
    }
    async Task Delete(int prescriptionId)
    {
        if (Prescriptions != null)
        {
            var prescription = Prescriptions.First(q => q.PrescriptionID == prescriptionId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to Delete {prescription.PrescriptionID}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.PrescriptionsEndpoint}/{prescriptionId}");
                await OnInitializedAsync();
            }
        }
    }
    public void Dispose()
    {
        _interceptor.DisposeEvent();
    }

}
