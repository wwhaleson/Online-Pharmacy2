@inject HttpClient _client
"@*
<EditForm Model="@order" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Date ordered: </label>
            <div>
                <InputDate @bind-Value="@order.OrderDate" class="form-control" />
                <ValidationMessage For="@(() => order.OrderDate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Time ordered: </label>
            <div>
                <InputDate @bind-Value="@order.OrderTime" class="form-control" />
                <ValidationMessage For="@(() => order.OrderTime)" />
            </div>
        </div>

        <div class="form-group">
            <label>Order Items: </label>
            <div>
                <InputSelect @bind-Value="order.o" class="form-control">
                    <option value="">-- Select Online Consultation ID --</option>
                    @if (OrderItems != null)
                    {
                        foreach (var orderitem in OrderItems)
                        {
                            <option value="@orderitem.OrderItemID">@orderitem.OrderItemID</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => order.OrderItemID)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="Order" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Order? order { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private IList<OrderItem>? OrderItems;

    protected async override Task OnInitializedAsync()
    {
        OrderItems = await _client.GetFromJsonAsync<List<OrderItem>>($"{Endpoints.OrderItemsEndpoint}");
    }

}
*@"