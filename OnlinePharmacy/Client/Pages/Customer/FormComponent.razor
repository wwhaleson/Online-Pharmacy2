@inject HttpClient _client

<EditForm Model="@customer" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">

        <div class="form-group">
            <label>First Name: </label>
            <div>
                <InputText @bind-Value="@customer.CustFname" class="form-control" />
                <ValidationMessage For="@(() => customer.CustFname)" />
            </div>
        </div>

        <div class="form-group">
            <label>Last Name: </label>
            <div>
                <InputText @bind-Value="@customer.CustLname" class="form-control" />
                <ValidationMessage For="@(() => customer.CustLname)" />
            </div>
        </div>

        <div class="form-group">
            <label>Gender: </label>
            <div>
                <InputSelect @bind-Value="customer.CustGender" class="form-control">
                    <option value="">-- Gender --</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </InputSelect>
                <ValidationMessage For="@(() => customer.CustGender)" />
            </div>
        </div>

        <div class="form-group">
            <label>Postal Code: </label>
            <div>
                <input type="int" @bind="@customer.CustPostalCode" class="form-control" />
                <ValidationMessage For="@(() => customer.CustPostalCode)" />
            </div>
        </div>

        <div class="form-group">
            <label>Block Number: </label>
            <div>
                <input type="int" @bind="@customer.CustBlockNo" class="form-control" />
                <ValidationMessage For="@(() => customer.CustBlockNo)" />
            </div>
        </div>

        <div class="form-group">
            <label>Floor Number: </label>
            <div>
                <input type="int" @bind="@customer.CustFloorNo" class="form-control" />
                <ValidationMessage For="@(() => customer.CustFloorNo)" />
            </div>
        </div>

        <div class="form-group">
            <label>Address: </label>
            <div>
                <InputText @bind-Value="@customer.CustAddress" class="form-control" />
                <ValidationMessage For="@(() => customer.CustAddress)" />
            </div>
        </div>

        <div class="form-group">
            <label>Phone Number: </label>
            <div>
                <input type="number" @bind="@customer.CustPhoneNo" class="form-control" />
                <ValidationMessage For="@(() => customer.CustPhoneNo)" />
            </div>
        </div>

        <div class="form-group">
            <label>Email: </label>
            <div>
                <InputText @bind-Value="@customer.CustEmail" class="form-control" />
                <ValidationMessage For="@(() => customer.CustEmail)" />
            </div>
        </div>

        <div class="form-group">
            <label>Password: </label>
            <div>
                <InputText @bind-Value="@customer.CustPass" class="form-control" />
                <ValidationMessage For="@(() => customer.CustPass)" />
            </div>
        </div>



    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="Customer" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Customer? customer { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private IList<Customer>? Customers;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

}