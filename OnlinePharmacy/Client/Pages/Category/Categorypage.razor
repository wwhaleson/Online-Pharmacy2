@attribute [Authorize]
@inject HttpClient _client
@inject IJSRuntime js
@page "/Category"
<PageTitle>Category</PageTitle>

<div class="container">
    <div class="d-flex flex-column" id="dflexCategory">
        <h1 class="mt-5" id="Categoryheader">Category</h1>
        <a href="/Category/create" class="btn btn-secondary createcategorybutton">
            <span class="oi oi-plus"></span>
            Create New Category
        </a>
    </div>

    @if (Categories == null)
    {
        <div class="alert alert-info">Loading Categories</div>
    }
    else
    {
        <div class="table-responsive mt-3">
            <table class="table ">
                <thead class="table-light">
                    <tr id="Categorytablecolumnname">
                        <th scope="col" class="dcol">#CategoryID</th>
                        <th scope="col" class="dcol">Name</th>
                        <th scope="col" class="dcol">Description</th>
                    </tr>
                </thead>


                <tbody>
                    @foreach (var category in Categories)
                    {
                        <tr>
                            <td class="dr">@category.CategoryID</td>
                            <td class="dr">@category.CategoryName</td>
                            <td class="dr">@category.CategoryDescription</td>
                            <td class="dr">
                                <a href="/Category/view/@category.CategoryID" class="btn btn-primary">
                                    <span class=" oi oi-book"></span>
                                </a>
                                <a href="/Category/edit//@category.CategoryID" class="btn btn-warning">
                                    <span class=" oi oi-pencil"></span>
                                </a>
                                <button class="btn btn-danger" @onclick="@(()=>Delete(category.CategoryID))">
                                    <span class="oi oi-delete"></span>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<Category>? Categories;
    <!--When the page begins to load-->
    protected async override Task OnInitializedAsync()
    {
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategorysEndpoint}");
    }
    async Task Delete(int categoryId)
    {
        if (Categories != null)
        {
            var category = Categories.First(q => q.CategoryID == categoryId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to Delete {category.CategoryID}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.CategorysEndpoint}/{categoryId}");
                await OnInitializedAsync();
            }
        }
    }

}
