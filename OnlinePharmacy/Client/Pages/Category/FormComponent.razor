@inject HttpClient _client

<EditForm Model="@category" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">

        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@category.CategoryName" class="form-control" />
                <ValidationMessage For="@(() => category.CategoryName)" />
            </div>
        </div>

        <div class="form-group">
            <label>Description: </label>
            <div>
                <InputText @bind-Value="@category.CategoryDescription" class="form-control" />
                <ValidationMessage For="@(() => category.CategoryDescription)" />
            </div>
        </div>

        
    </fieldset>
    <div class="d-flex flex-column-md-6 mt-2 justify-content-center">
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BacktoListCategory Target="Category" />
    </div>

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Category? category { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private IList<Category>? Categories;

    protected async override Task OnInitializedAsync()
    {
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }

}