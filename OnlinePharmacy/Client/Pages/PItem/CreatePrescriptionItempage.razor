@attribute [Authorize]
@page "/PrescriptionItem/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime JSRuntime
<h1 class="mt-3" id="CreatePrescriptionItemheader"> Create Prescription Item</h1>


<CreateFormComponent ButtonText="Create Prescription Item" prescriptionitem="prescriptionitem" OnValidSubmit="@CreatePrescriptionItems" />





@code {
    PrescriptionItem prescriptionitem = new PrescriptionItem();


    private IList<Prescription>? Prescriptions;
    private IList<Product>? Products;
    private IList<Order>? Orders;

    protected async override Task OnInitializedAsync()
    {
        Prescriptions = await _client.GetFromJsonAsync<List<Prescription>>($"{Endpoints.PrescriptionsEndpoint}");
        Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
        Orders = await _client.GetFromJsonAsync<List<Order>>($"{Endpoints.OrdersEndpoint}");

    }

    private async Task CreatePrescriptionItems()
    {
        await _client.PostAsJsonAsync(Endpoints.PrescriptionItemsEndpoint, prescriptionitem);
        await JSRuntime.InvokeVoidAsync("alert", "Prescription Item was Created!");
        prescriptionitem = new PrescriptionItem();

    }

}
