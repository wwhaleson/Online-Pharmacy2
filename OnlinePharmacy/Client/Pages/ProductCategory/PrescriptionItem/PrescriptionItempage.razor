@attribute [Authorize]
@inject HttpClient _client
@inject IJSRuntime js
@page "/PrescriptionItem"
<PageTitle>Prescription Item</PageTitle>

<nav class="navbar navbar-expand-lg bg-white  ">
    <div class="container" aria-label="breadcrumb" id="breadcrumbprescriptionitemcontainer">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">Prescription Medicine</li>
        </ol>
    </div>
</nav>

<div class="container" >
    <div class="row my-3">
        <h2 class="text-center" id="prescriptionitemheader">Prescription Medicine</h2>
        <a href="/PrescriptionItem/create" class="btn btn-secondary">
            <span class="oi oi-plus"></span>
            Create New Prescription Item
        </a>
        <hr class="text-hr" />
    </div>

    <div class="row">
        <div class="col-md-5 col-lg-4 order-md-first">
            <div class="col">
                <div class="card h-100">
                    <img src="..." class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Card title</h5>
                        <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-7 col-lg-8">
            <div class="row row-cols-1 row-cols-md-3 g-4">
            
            </div>

        </div>

    </div>
</div>

@code {
    private List<PrescriptionItem>? PrescriptionItems;
    <!--When the page begins to load-->
    protected async override Task OnInitializedAsync()
    {
        PrescriptionItems = await _client.GetFromJsonAsync<List<PrescriptionItem>>($"{Endpoints.PrescriptionItemsEndpoint}");
    }
    async Task Delete(int prescriptionitemId)
    {
        if (PrescriptionItems != null)
        {
            var prescriptionitem = PrescriptionItems.First(q => q.PrescriptionItemID == prescriptionitemId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to Delete {prescriptionitem.PrescriptionItemID}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.PrescriptionItemsEndpoint}/{prescriptionitemId}");
                await OnInitializedAsync();
            }
        }
    }
}
